// 4.16.1 0xb5811760
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_battery_0[]; // BITMAP_BATTERY_0_ID = 0, Size: 32x18 pixels
extern const unsigned char image_battery_10[]; // BITMAP_BATTERY_10_ID = 1, Size: 32x17 pixels
extern const unsigned char image_battery_2[]; // BITMAP_BATTERY_2_ID = 2, Size: 32x18 pixels
extern const unsigned char image_battery_4[]; // BITMAP_BATTERY_4_ID = 3, Size: 32x18 pixels
extern const unsigned char image_battery_6[]; // BITMAP_BATTERY_6_ID = 4, Size: 32x18 pixels
extern const unsigned char image_battery_8[]; // BITMAP_BATTERY_8_ID = 5, Size: 32x18 pixels
extern const unsigned char image_battery_charging[]; // BITMAP_BATTERY_CHARGING_ID = 6, Size: 32x17 pixels
extern const unsigned char image_chat_icon[]; // BITMAP_CHAT_ICON_ID = 7, Size: 131x132 pixels
extern const unsigned char image_chat_icon_extra_data[];
extern const unsigned char image_signal_1[]; // BITMAP_SIGNAL_1_ID = 8, Size: 18x19 pixels
extern const unsigned char image_signal_2[]; // BITMAP_SIGNAL_2_ID = 9, Size: 18x19 pixels
extern const unsigned char image_signal_3[]; // BITMAP_SIGNAL_3_ID = 10, Size: 18x19 pixels
extern const unsigned char image_signal_4[]; // BITMAP_SIGNAL_4_ID = 11, Size: 18x19 pixels
extern const unsigned char image_signal_5[]; // BITMAP_SIGNAL_5_ID = 12, Size: 18x19 pixels
extern const unsigned char image_signal_locked[]; // BITMAP_SIGNAL_LOCKED_ID = 13, Size: 18x19 pixels
extern const unsigned char image_signal_off[]; // BITMAP_SIGNAL_OFF_ID = 14, Size: 18x19 pixels
extern const unsigned char image_splash[]; // BITMAP_SPLASH_ID = 15, Size: 320x240 pixels
extern const unsigned char image_splash_extra_data[];
extern const unsigned char image_system_icon[]; // BITMAP_SYSTEM_ICON_ID = 16, Size: 132x132 pixels
extern const unsigned char image_system_icon_extra_data[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_battery_0, 0, 32, 18, 4, 16, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 1, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_10, 0, 32, 17, 4, 1, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 15, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_2, 0, 32, 18, 22, 5, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_4, 0, 32, 18, 18, 5, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_6, 0, 32, 18, 14, 4, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_8, 0, 32, 18, 5, 1, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_charging, 0, 32, 17, 5, 0, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 1, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_chat_icon, image_chat_icon_extra_data, 131, 132, 0, 0, 131, (uint8_t)(touchgfx::Bitmap::L8) >> 3, 132, (uint8_t)(touchgfx::Bitmap::L8) & 0x7 },
    { image_signal_1, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_signal_2, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_signal_3, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_signal_4, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_signal_5, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_signal_locked, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_signal_off, 0, 18, 19, 0, 0, 18, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 19, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_splash, image_splash_extra_data, 320, 240, 0, 0, 320, (uint8_t)(touchgfx::Bitmap::L8) >> 3, 240, (uint8_t)(touchgfx::Bitmap::L8) & 0x7 },
    { image_system_icon, image_system_icon_extra_data, 132, 132, 0, 0, 132, (uint8_t)(touchgfx::Bitmap::L8) >> 3, 132, (uint8_t)(touchgfx::Bitmap::L8) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
